setting dmc scratch directory
 
============================================================
=====         Summary of your script job               =====
============================================================
  The script file is: modtest
  The time limit is 01:00:00 HH:MM:SS.
  The target directory is: /mnt/beegfs/home/ualjmc/gvegas-tse/gvegas-mod/git-mod_v0
  The working directory is:  /scratch-local/ualjmc.modtestGPU.323321
  The memory limit is: 1gb
  The job will start running after: 2019-09-17T11:20:30
  Job Name: modtestGPU
  Virtual queue: gpu
  QOS: --qos=gpu
  Constraints: 
  Using  1  cores on master node  dmc2
  Node list:  dmc2
  Nodes:  dmc2
  Command typed:
/apps/scripts/run_gpu modtest     
  Queue submit command:
sbatch --qos=gpu -J modtestGPU --begin=2019-09-17T11:20:30 --requeue --mail-user=jmcates@crimson.ua.edu -o modtestGPU.o323321 -t 01:00:00 --gres=gpu:1 -N 1-1 -n 1 --mem-per-cpu=1000mb  
 
Assigning GPU 0 to this job.
ncall, ndim = 1024, 6
mds = 1

 << vegas internal parameters >>
            ng:     2
            nd:    50
           npg:    16
        nCubes:           64
    nCubes*npg:         1024

 << input parameters for vegas >>
     ndim =  6   ncall =      1024
     it   =  0   itmx =   10
     acc  =     0.000
     mds  =  1   nd =   50
    (xl,xu)= (  0.000 , 1.000 )
    (xl,xu)= (  0.000 , 1.000 )
    (xl,xu)= (  0.000 , 1.000 )
    (xl,xu)= (  0.000 , 1.000 )
    (xl,xu)= (  0.000 , 1.000 )
    (xl,xu)= (  0.000 , 1.000 )

 << kernel parameters for CUDA >>
       Block size           =    256
       Grid size            =      1 x 1
     Actual Number of calls =        4096
   Required Number of calls =        1024 (  25.00%)


 << integration by vegas >>
     iteration no.    1   integral=  6.00
                          std dev  = 0.00
     accumulated results: integral = 6.00
                          std dev  = 0.00

 << integration by vegas >>
     iteration no.    2   integral=  0.00
                          std dev  = 0.00
     accumulated results: integral = -nan
                          std dev  = -nan
                          chi**2 per it'n =       -nan
#===========================
# No. of Thread Block Size : 256
#===========================
# No. of dimensions        : 6
# No. of func calls / iter : 1024
# No. of max. iterations   : 10
# Desired accuracy         : 0.000001
#===========================
# Answer                   : -nan +- -nan
# Chisquare                : -nan
#===========================
#===========================
# Function call time per iteration: 0.000484
# Refining time per iteration: 0.000063
#===========================
